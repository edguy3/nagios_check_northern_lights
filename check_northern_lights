#/bin/bash

VERSION="1.0.0 edguy@eguy.org 2023-dec-7"

CRITICAL=5
WARNING=4
VERBOSE=false

LINK=https://services.swpc.noaa.gov/products/noaa-planetary-k-index-forecast.json
SEELINK=https://www.swpc.noaa.gov/products/3-day-geomagnetic-forecast

    ################################################################################
    # Process command line options
    #
    # We do no use getopts since it is unable to process long options

    while true; do

        case "$1" in
            ########################################
            # Options without arguments
            -v|--verbose)
                VERBOSE=true
                shift
                ;;
            ########################################
            # Options with arguments
            -c|--critical)
                if [ $# -gt 1 ]; then
                    CRITICAL="$2"
                    shift 2
                else
                   unknown "-c,--critical requires an argument"
                fi
                ;;
            -w|--warning)
                if [ $# -gt 1 ]; then
                    WARNING="$2"
                    shift 2
                else
                   unknown "-c,--critical requires an argument"
                fi
                ;;
            *)
                if [ -n "$1" ] ; then
                    unknown "invalid option: ${1}"
                fi
                break
                ;;
        esac
    done

################################################################################
# Exits with a critical message
# Params
#   $1 error message
critical() {
    echo CRITICAL: $*
    exit 2
}

################################################################################
# Exits with a warning message
# Param
#   $1 warning message
warning() {
    echo WARN: $*
    exit 1
}

ok() {
    echo OK: $*
    exit 0
}

# REPORT=$(cat ~/tmp/t.json)  # for debug
REPORT=$(wget -O - $LINK 2> /dev/null)

THEMAX=$(
    echo $REPORT |
    jq '[ .
        |map(
            select(
                any(
                    .[2]; contains("observed")
                )
                |not
            )
        )
        [][1]
        | tonumber
    ]| max
    '
)

$VERBOSE && echo max is $THEMAX

WHEN=$(
    echo $REPORT |
    jq '.
        |map(
            select(
                any(
                    .[2]; contains("observed")
                )
                |not
            )
        )
        # []
        |map(
            select(
                any(
                    .[1]; contains("'$THEMAX'")
                )
            )
        )
        [0][0]
    '
)
  # not perfect - but should mostly work.

$VERBOSE && echo WHEN is $WHEN


[ "$THEMAX" -gt "$CRITICAL" ] && critical $THEMAX solar level in next three days. $WHEN $SEELINK
[ "$THEMAX" -gt "$WARNING" ] && warning $THEMAX solar level in next three days. $WHEN $SEELINK
ok "$THEMAX solar level in next three days. $SEELINK"
# exit in all three above.


